#!/bin/bash
# Deploys app3 from version control, runs tests and if tests pass, runs new version of the app. If tests fail or any other error, sends email.
 
# Write some HTTP headers to make Nginx happy
echo -e "Content-type: text/html\n"
 
# Variables
OUTPUT=''
PM2_APP_NAME=pank
 
log() {
    # Output immediately (for terminal and web)
    echo -e $1
 
    # Collect OUTPUT (for sending email later)
    OUTPUT+="$1"$'\n'
}
 
cmd() {
    log "Doing '$@'"
 
    # Run the command and capture its output and exit code
    COMMAND_OUTPUT=`$@ 2>&1`
    COMMAND_EXIT_CODE=$?
 
    # Add command output to OUTPUT
    OUTPUT+=$COMMAND_OUTPUT$'\n'
 
    # Send the command output to stdout, too
    echo -e $COMMAND_OUTPUT$'\n'
 
    if [[ $COMMAND_EXIT_CODE -ne 0 ]]; then
 
        log "The previous command returned non-zero exit code. Aborting."
 
        # Send email to me
        mail -s 'message subject' -aFrom:app@kerlideploy.xyz  kerlitekku@gmail.com <<< $OUTPUT
 
        # Stop the script
        exit $?
    fi
}
 
log "Updating the project"

# Change potentially changed files (only tracked ones) back to the state they were originally in Github
cmd "git reset --hard"
 
# Pull the new commits from Github
cmd 'git pull'

log 'Make deploy executable'
chmod +x deploy

#Go to app folder
cd app

# Install new dependencies
cmd 'npm i'

# Run tests
cmd 'npm run test'

# Log in to AWS
cmd 'aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 162491260147.dkr.ecr.us-east-2.amazonaws.com'

# Back to root folder
cd ..

log 'Build image'
TIMESTAMP=`date +%Y-%m-%d_%H-%M-%S`
cmd "docker build -t my-app ."

log 'tag'
cmd "docker tag my-app:latest 162491260147.dkr.ecr.us-east-2.amazonaws.com/my-app:$TIMESTAMP"

log 'pushing'
cmd "docker push 162491260147.dkr.ecr.us-east-2.amazonaws.com/my-app:$TIMESTAMP"

if [ ! "$(docker ps -q -f name=my-app)" ]; then
    if [ "$(docker ps -aq -f status=exited -f name=my-app)" ]; then
        # cleanup
        cmd "docker rm 162491260147.dkr.ecr.us-east-2.amazonaws.com/my-app:$TIMESTAMP"
    fi
    # run container
    cmd "docker run 162491260147.dkr.ecr.us-east-2.amazonaws.com/my-app:$TIMESTAMP"
fi
 



