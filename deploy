#!/bin/bash
# Deploys app3 from version control, runs tests and if tests pass, runs new version of the app. If tests fail or any other error, sends email.
 
# Write some HTTP headers to make Nginx happy
echo -e "Content-type: text/html\n"
 
# Variables
OUTPUT=''
PM2_APP_NAME=pank
 
log() {
    # Output immediately (for terminal and web)
    echo -e $1
 
    # Collect OUTPUT (for sending email later)
    OUTPUT+="$1"$'\n'
}
 
cmd() {
    log "Doing '$@'"
 
    # Run the command and capture its output and exit code
    COMMAND_OUTPUT=`$@ 2>&1`
    COMMAND_EXIT_CODE=$?
 
    # Add command output to OUTPUT
    OUTPUT+=$COMMAND_OUTPUT$'\n'
 
    # Send the command output to stdout, too
    echo -e $COMMAND_OUTPUT$'\n'
 
    if [[ $COMMAND_EXIT_CODE -ne 0 ]]; then
 
        log "The previous command returned non-zero exit code. Aborting."
 
        # Send email to me
        mail -s 'message subject' -aFrom:app@kerlideploy.xyz  kerlitekku@gmail.com <<< $OUTPUT
 
        # Stop the script
        exit $?
    fi
}
 
        log "Updating the project"

        log "Shutting down running app"
        cmd "pm2 stop $PM2_APP_NAME"
        
 
        # Change potentially changed files (only tracked ones) back to the state they were originally in Github
        cmd "git reset --hard"
 
        # Pull the new commits from Github
        cmd 'git pull'
 

# Run tests
cmd 'npm run test'

log 'Make deploy executable'
cmd 'chmod +x deploy'

log 'go to techworld folder'
cmd 'cd /var/www/app.kerlideploy.xyz/techworld-js-docker-demo-app/'

log 'logging in to aws'
cmd 'aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 162491260147.dkr.ecr.us-east-2.amazonaws.com'

log 'build the image'
cmd 'docker build -t my-app:1.3 techworld-js-docker-demo-app/'

log 'tag'
cmd 'docker tag my-app:1.3 162491260147.dkr.ecr.us-east-2.amazonaws.com/my-app:1.3'

log 'pushing'
cmd 'docker push 162491260147.dkr.ecr.us-east-2.amazonaws.com/my-app:1.3'

log 'go back to main'
cmd 'cd /var/www/app.kerlideploy.xyz/'

log 'Run app'
cmd "pm2 start $PM2_APP_NAME"
cmd 'pm2 save' 



