openapi: 3.0.2
info:
    title: Kerli pangaAPI
    version: 1.0.0
servers:
    -
        url: 'http://localhost:8080'
        description: Local development server
paths:
    /users:
        summary: User related operations
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/postUsersRequest'
                required: true
            tags:
                - users
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/userObject'
                    description: User has been created
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            examples:
                                Invalid password:
                                    value:
                                        error: Invalid password
                                Invalid name:
                                    value:
                                        error: Invalid name
                                Invalid username:
                                    value:
                                        error: Invalid username
                    description: Bad request
                '409':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            examples:
                                Username already exists:
                                    value:
                                        error: Username already exists
                    description: Username already exists
            summary: Registers a new user
    /sessions:
        summary: Logging users in and out
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/postSessionsRequest'
                required: true
            tags:
                - sessions
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/postSessionsResponse'
                    description: Session token has been created
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            examples:
                                Invalid username/password:
                                    value:
                                        error: Invalid username/password
                    description: Invalid username/password
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            examples:
                                Missing username or password:
                                    value:
                                        error: Missing username or password
                    description: Missing username or password
            summary: Create new session token for user (log in)
        delete:
            tags:
                - sessions
            responses:
                '204':
                    description: Session token has been deleted
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            examples:
                                Invalid Authorization header format:
                                    value:
                                        error: Invalid Authorization header format
                    description: Invalid Authorization header format
                '401':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            examples:
                                Missing Authorization header:
                                    value:
                                        error: Missing Authorization header
                                Invalid token:
                                    value:
                                        error: Invalid token
                    description: Missing Authorization header
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            examples:
                                Invalid session:
                                    value:
                                        error: Invalid session
                    description: Invalid session
            security:
                -
                    Authorization: []
            summary: Delete session token (log out)
components:
    schemas:
        postUsersRequest:
            title: POST /users request
            description: ''
            required:
                - name
                - username
                - password
            type: object
            properties:
                name:
                    description: Users full name
                    type: string
                username:
                    description: Username
                    type: string
                password:
                    description: Password
                    type: string
            example:
                name: Mari Maasikas
                username: Mari37
                password: mariparool
        postSessionsRequest:
            title: POST /sessions request
            description: ''
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
            example:
                username: Mari37
                password: mariparool
        postSessionsResponse:
            title: POST /sessions response
            description: Session has been created
            required: []
            type: object
            properties:
                token:
                    description: User`s session token
                    type: string
            example:
                token: 5f800e29f3f2d921c8c0ee09
        deleteSessionsRequest:
            title: DELETE /sessions request
            description: ''
            type: object
            properties:
                Authorization:
                    type: string
            example:
                Authorization: >-
                    eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZjcyMmQxZGRhYWRiZDVhYTBkOGNhMjYiLCJpYXQiOjE2MDEzMTgxODZ9.HABqtzBwtnVxnIoI16ZTNpgklX72-dYHALTL2GDHy58
        userObject:
            title: userObject
            description: ''
            type: object
            properties:
                id:
                    description: UserÂ´s ID
                    type: string
                name:
                    description: User`s full name
                    type: string
                username:
                    description: Username
                    type: string
                accounts:
                    $ref: '#/components/schemas/accountObject'
                    description: Array of user`s bank accounts
            example:
                id: 5f79bab312c4877b900f9a55
                name: Mars
                username: Mari2
                accounts:
                    -
                        name: Main
                        balance: 10000
                        currency: EUR
                        number: ETC0e861235
                        id: 5f79bab412c4877b900f9a56
        accountObject:
            title: accountObject
            description: ''
            type: object
            properties:
                name:
                    description: Account name
                    type: string
                balance:
                    format: int32
                    description: Funds the account holds
                    type: integer
                currency:
                    description: Funds currency
                    type: string
                number:
                    description: Account number
                    type: string
            example:
                name: Main
                balance: 10000
                currency: EUR
                number: ETCed019ead
        errorResponse:
            title: error response
            description: Generic error response
            type: object
            properties:
                error:
                    type: string
            example:
                error: Error message
    securitySchemes:
        Authorization:
            scheme: bearer
            type: http
